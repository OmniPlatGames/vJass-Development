library DialogSelection initializer init requires TimerUtils, Dialog
    globals
        private trigger HeroPick = CreateTrigger()
        private trigger Structure = CreateTrigger()
        private Dialog array dDialog[iPlayerLimit]
    endglobals
    
    private function StructureDialogButton takes nothing returns nothing
        local integer buttonCount = 2
        local integer i = 0 
        local integer j = 0
        local button tempButton
        local integer buttonPress
        local integer trigPlayer
        local boolean trigFound
        local button trigButton = GetClickedButton()
        loop
            exitwhen i > iPlayerLimit
            exitwhen trigFound
            loop
                exitwhen j > buttonCount
                exitwhen trigFound
                set tempButton = dDialog[i].GetButton(j)
                if tempButton != null then
                    if tempButton == trigButton then
                        set buttonPress = j
                        set trigPlayer = i
                        set trigFound = true
                    endif
                endif
                set j = j + 1
            endloop
            set i = i + 1
            set j = 0
        endloop
        set StructureLimit[trigPlayer] = buttonPress
        call dDialog[trigPlayer].destroy()
        set dDialog[trigPlayer] = 0
    endfunction
    
    private function StructureDialog takes integer index returns nothing
        set dDialog[index] = Dialog.create(Player(index), "Structure Mode")
        call dDialog[index].AddButton("No Structures")
        call dDialog[index].AddButton("3 Structures")
        call dDialog[index].AddButton("5 Structures")
        call dDialog[index].DisplayDialog()
        call TriggerRegisterDialogEvent(Structure, dDialog[index].GetDialog())
    endfunction
    
    private function HeroPickDialogButton takes nothing returns nothing
        local integer i = 0
        local integer j = 0
        local button tempButton
        local integer buttonPress
        local integer trigPlayer
        local boolean trigFound = false
        local button trigButton = GetClickedButton()
        loop
            exitwhen i > iPlayerLimit
            exitwhen trigFound
            loop
                exitwhen j > 1
                exitwhen trigFound
                set tempButton = dDialog[i].GetButton(j)
                if tempButton != null then
                    if tempButton == trigButton then
                        set buttonPress = j
                        set trigPlayer = i
                        set trigFound = true
                    endif
                endif
                set j = j + 1
            endloop
            set i = i + 1
            set j = 0
        endloop
        set ModePick[trigPlayer] = buttonPress
        call dDialog[trigPlayer].destroy()
        set dDialog[trigPlayer] = 0
        call StructureDialog(trigPlayer)
    endfunction
    
    private function HeroPickDialog takes nothing returns nothing
        local integer index = GetPlayerId(GetEnumPlayer())
        set dDialog[index] = Dialog.create(GetEnumPlayer(), "Selection Mode")
        call dDialog[index].AddButton("All Pick")
        call dDialog[index].AddButton("All Random")
        call dDialog[index].DisplayDialog()
        call TriggerRegisterDialogEvent(HeroPick, dDialog[index].GetDialog())
    endfunction
    
    private function StartHeroDialog takes nothing returns nothing
        local force fTempForce = CreateForce()
        set fTempForce = fPlayers
        call ForForce(fTempForce, function HeroPickDialog)
        call DestroyForce(fTempForce)
        set fTempForce = null
    endfunction
    
    private function init takes nothing returns nothing
        local trigger t = CreateTrigger()
        call TriggerRegisterTimerEvent(t, 3.00, false)
        call TriggerAddAction(HeroPick, function HeroPickDialogButton)
        call TriggerAddAction(Structure, function StructureDialogButton)
        call TriggerAddAction(t, function StartHeroDialog)
        set t = null
    endfunction
endlibrary